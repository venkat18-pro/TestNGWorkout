<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="Lenovo" ignored="2" name="Test1" tests="4" failures="0" timestamp="28 Jan 2022 05:54:43 GMT" time="0.409" errors="0">
  <testcase name="@BeforeClass start" time="0.0" classname="com.testng.demo.test.Testng1">
    <failure type="org.testng.TestNGException" message="
Can inject only one of &amp;lt;ITestContext, XmlTest&amp;gt; into a @BeforeClass annotated start.
For more information on native dependency injection please refer to http://testng.org/doc/documentation-main.html#native-dependency-injection">
      <![CDATA[org.testng.TestNGException: 
Can inject only one of <ITestContext, XmlTest> into a @BeforeClass annotated start.
For more information on native dependency injection please refer to http://testng.org/doc/documentation-main.html#native-dependency-injection
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
... Removed 14 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass start -->
  <testcase name="@BeforeMethod startTime" time="0.0" classname="com.testng.demo.test.Testng1">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTime -->
  <testcase name="@AfterMethod endTime" time="0.0" classname="com.testng.demo.test.Testng1">
    <skipped/>
  </testcase> <!-- @AfterMethod endTime -->
  <testcase name="@BeforeMethod startTime" time="0.0" classname="com.testng.demo.test.Testng1">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTime -->
  <testcase name="@AfterMethod endTime" time="0.0" classname="com.testng.demo.test.Testng1">
    <skipped/>
  </testcase> <!-- @AfterMethod endTime -->
  <testcase name="@BeforeMethod startTime" time="0.0" classname="com.testng.demo.test.Testng1">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTime -->
  <testcase name="@AfterMethod endTime" time="0.0" classname="com.testng.demo.test.Testng1">
    <skipped/>
  </testcase> <!-- @AfterMethod endTime -->
  <testcase name="@BeforeMethod startTime" time="0.0" classname="com.testng.demo.test.Testng1">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTime -->
  <testcase name="@AfterMethod endTime" time="0.0" classname="com.testng.demo.test.Testng1">
    <skipped/>
  </testcase> <!-- @AfterMethod endTime -->
  <testcase name="@AfterClass end" time="0.0" classname="com.testng.demo.test.Testng1">
    <skipped/>
  </testcase> <!-- @AfterClass end -->
  <testcase name="loginPage" time="0.0" classname="com.testng.demo.test.Testng1">
    <skipped/>
  </testcase> <!-- loginPage -->
  <testcase name="loginMultipleValuePassing" time="0.0" classname="com.testng.demo.test.Testng1">
    <skipped/>
  </testcase> <!-- loginMultipleValuePassing -->
  <testcase name="loginMultipleValuePassing" time="0.0" classname="com.testng.demo.test.Testng1">
    <skipped/>
  </testcase> <!-- loginMultipleValuePassing -->
  <testcase name="loginMultipleValuePassing" time="0.0" classname="com.testng.demo.test.Testng1">
    <skipped/>
  </testcase> <!-- loginMultipleValuePassing -->
  <testcase name="loginPassValue" time="0.0" classname="com.testng.demo.test.Testng1">
    <ignored/>
  </testcase> <!-- loginPassValue -->
  <testcase name="cookieTest" time="0.0" classname="com.testng.demo.test.Testng1">
    <ignored/>
  </testcase> <!-- cookieTest -->
</testsuite> <!-- Test1 -->
